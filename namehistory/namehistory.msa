# TODO: (maybe) switch to using register_command() 
*:/namehistory [$player] [$] = >>>
    @p = player();
    
    # configs
    @config = _get_config();
    @ptag = @config['ptag']; # prefix tag
    @mcol = @config['mcol']; # message colour
    @kcol = @config['kcol']; # keyword colour
    @dateformat = @config['dateformat']; # e.g. 2017/01/29 EDT

    if(has_permission(@p, 'nc.namehistory')){
	if ($player != ''){
            http_request('https://api.mojang.com/users/profiles/minecraft/'.$player, closure(@response){
		@flags = array();
		if ($ != ''){
		    @flags = parse_args($);								
		}

		if (@response[responseCode] == 200){ # the name was found
	            @uuid = json_decode(@response[body])[id];

		    _print_name_history(@uuid, @flags);
		} else{
		    if (@response[responseCode] == 204){ # user likely changed their name
			http_request('https://api.mojang.com/users/profiles/minecraft/'.$player.'?at=0', closure(@response){
			    if (@response[responseCode] == 200){ # user changed their name
				@uuid = json_decode(@response[body])[id];
				msg(colorize(@ptag.@mcol.'The player\'s name has since changed.'));
				_print_name_history(@uuid, @flags);
			    } else{
				if (@response[responseCode] == 204){ # name still isn't found
				    die(colorize(@ptag.@mcol.'No player named '.@kcol.$player.@mcol.' was found.'));				    
				} else{
				    msg(colorize(@ptag.@mcol.'Error: Mojang\'s API servers returned '.@kcol.@response[responseCode].' '.@response[responseText].@mcol.'.'));
				}
			    }
			});
		    } else{
			msg(colorize(@ptag.@mcol.'Error: Mojang\'s API servers returned '.@kcol.@response[responseCode].' '.@response[responseText].@mcol.'.'));
		    }
		}			
	    });
	} else{
	    msg(colorize(@ptag.@mcol.'Checks the name history of the specified player.'));			
	    msg(colorize(@ptag.@mcol.'Usage: '.@kcol.'/namehistory <player> <flags>'));
	    msg(colorize(@ptag.@mcol.'Flags: '));
	    msg(colorize(@ptag.@kcol.'-u '.@kcol.'Returns the UUID of the player as well.'));
	}
    } else{
        msg(colorize(@ptag.'&cInsufficient permissions.'));
    }
<<<

*:/nh [$] = >>>
    run_cmd('/namehistory '.$);
<<<
