*:/goal [$] = >>>
    if(has_permission('nc.title.member')){
        if($ == null || $ === ''){
            @donations = 34;
#           @donors = array('Damascus_ari', 'Mazorca', 'Ryualura');
            x_new_thread(time(), closure(){
                @donors = get_value('olympus.donations.donors');
            });

            @progress = floor(@donations / 5);
            @progressbar = array('#','#','#','#','#','#','#','#','#','#');
            array_insert(@progressbar, '&8', @progress);
            if(@donations >= 50){
                @pcolors = array('&2', '&2', '&2', '&2');
            } else if(@donations >= 35){
                @pcolors = array('&2', '&2', '&2', '&8');
            } else if(@donations >= 25){
                @pcolors = array('&2', '&2', '&8', '&8');
            } else if(@donations >= 15){
                @pcolors = array('&2', '&8', '&8', '&8');
            } else{
                @pcolors = array('&8', '&8', '&8', '&8');
            }

            msg(colorize('&b=-=-= Noobcraft Serverwide Donation Goals =-=-='));
            msg(colorize('&6Current Progress: &6[&2'.array_implode(@progressbar, '').'&6] ($'.@donations.'&6)'));
            msg(colorize(@pcolors[0].'> $15: +25% mcMMO EXP Boost'));
            msg(colorize(@pcolors[1].'> $25: Access to /tpa'));
            msg(colorize(@pcolors[2].'> $35: Special Gear/Loot Kit'));
            msg(colorize(@pcolors[3].'> $50: Permanent Extra Sethome'));
            if(array_size(@donors) > 0){
                msg(colorize('&6This month\'s perks were graciously contributed by: &2'.array_implode(@donors, '&6, &2')));
            }
        } else{
            if(pisop()){
                @args = parse_args($);
                switch(to_lower(@args[0])){
                    case 'add':
                        if(array_size(@args) > 1){
                            x_new_thread(time(), closure(){
                                @donors = get_value('olympus.donations.donors');
                                if(@donors != null){ #if something was saved
                                    @donors[] = @args[1];
                                } else{
                                    @donors = array(@args[1]);
                                }
                                store_value('olympus.donations.donors', @donors);
                            });
                            msg('Queued to add '.@args[1].' to the donor list.');
                        } else{
                            msg('Usage: /goal add <player>');
                        }
                    case 'clear':
                        #if(array_size(@args) == 0){
                            x_new_thread(time(), closure(){
                                @donors = get_value('olympus.donations.donors');
                                if(@donors != null){ #if something was saved
                                    clear_value('olympus.donations.donors');
                                }
                            });
                        msg('Queued to clear the list of donors.');
                        #}
                    case 'total':
                        if(array_size(@args) > 1){
                            x_new_thread(time(), closure(){
                                if(@args[1] != null || is_numeric(@args[1])){ #
                                    store_value('olympus.donations.total', @args[1]);
                                }
                            });
                            msg('Queued to set donation amount reached to '.@args[1].'.');
                        } else{
                            msg('Usage: /goal add <donation progress>');
                        }
                    default:
                        msg('/goal Command Usages');
                        msg('Add a donor to the list: /goal add <player>');
                        msg('Remove a donor from the list: /goal clear');
                        msg('Set the month\'s donation progress: /goal total <$>');
                }
            } else{
                msg(colorize('&cThese features are admin only.'));
            }
        }
    } else{
        msg(colorize('&cNo permission. Requires at least &bnc.title.member&c.'));
    }
<<<
